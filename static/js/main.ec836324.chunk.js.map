{"version":3,"sources":["components/Expenses/Item/Date/ExpenseDate.js","components/Card/Card.js","components/Expenses/Item/ExpenseItem.js","components/Expenses/Filter/ExpenseFilter.js","components/Expenses/Expenses.js","components/NewExpense/Form/NewExpenseForm.js","components/NewExpense/NewExpense.js","components/Footer/Footer.js","App.js","index.js"],"names":["ExpenseDate","props","year","date","getFullYear","month","toLocaleString","day","className","Card","classes","children","ExpenseItem","formattedPrice","expense","price","style","currency","onClick","console","log","item","ExpenseFilter","onChange","event","onYearChange","target","value","defaultValue","selected","Expenses","useState","selectedYear","setSelectedYear","receivedYear","expenses","map","NewExpenseForm","inputItem","inputPrice","inputDate","userInput","setUserInput","onSubmit","preventDefault","expenseData","parseInt","Date","onFormSubmitToNewExpense","type","evt","prevState","min","step","max","NewExpense","receivedExpenseData","onNewExpenseSubmitToApp","Footer","href","rel","INITIAL_LIST","id","App","expenseList","setExpenseList","align","receivedExpenseDataFromNewExpense","now","prevExpenseList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec836324.chunk.js","sourcesContent":["import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n    const year = props.date.getFullYear();\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n\n    return (\n        <div className=\"expense-date\">\n            <div className=\"expense-date__year\">{year}</div>\n            <div className=\"expense-date__month\">{month}</div>\n            <div className=\"expense-date__date\">{day}</div>\n        </div>\n    );\n}\n\nexport default ExpenseDate;\n","import React from 'react';\n\nimport './Card.css'\n\nconst Card = (props) => {\n    const classes = `card ${props.className}`;\n    return (\n        <div className={classes}>\n            {props.children}\n            {/* {console.log(props.children)} */} \n            {/* children props is an object containing all elements wrapped around Card component */}\n        </div>\n    );\n}\n\nexport default Card;","import React, { useState } from 'react';\n\nimport './ExpenseItem.css';\nimport ExpenseDate from '../Item/Date/ExpenseDate';\nimport Card from '../../Card/Card';\n\n// props object containing expense object\nfunction ExpenseItem(props) {\n\n    /**\n     * ATTENTION!! â†’ Child components (ExpenseItem), which get data from App, should NOT have their own useState. \n     * If they do, the data will have its OWN state inside the child components, resulting in data not getting \n     * rendered correctly. Child states will override parent state, making newly added expenses getting added \n     * to the expense list, but not displayed on screen property.\n     */\n\n    \n    // useState Hook\n    // const [item, setItem] = useState(props.expense.item);\n    // const [newPrice, setNewPrice] = useState(props.expense.price);\n\n    // // event handlers\n    // const increaseClickHandler = () => {\n    //     setNewPrice(props.expense.price += 10000);\n    //     console.log(\"Increase\", newPrice);\n    // }\n    \n    // const decreaseClickHandler = () => {\n    //     setNewPrice(props.expense.price -= 10000);\n    //     console.log(\"Decrease\", newPrice);\n    // }\n    \n    const itemClickHandler = () => {\n        console.log(\"Clicked on\", props.expense.item, \"- Price:\", props.expense.price);\n    }\n    \n    // const clickHanlder = () => {\n    //     setItem('Updated!!');\n    //     console.log(item); // notice old value will get log, not updated value\n    // }\n    \n    // convert to VND\n    const formattedPrice = props.expense.price.toLocaleString('vi-VI', {style: 'currency', currency: 'VND'});\n    \n    // JSX\n    return (\n        <Card className=\"expense-item\">\n            <ExpenseDate date={props.expense.date} />\n            <div onClick={itemClickHandler} className=\"expense-item__description\">\n                <h2>{props.expense.item}</h2>\n                {/* <button className=\"btn\" onClick={decreaseClickHandler}>-</button> */}\n                <div className=\"expense-item__price\">{formattedPrice}</div>\n                {/* <button className=\"btn\" onClick={increaseClickHandler}>+</button> */}\n            </div>\n        </Card>\n    );\n}\n\nexport default ExpenseItem;\n","import React from 'react';\n\nimport './ExpenseFilter.css';\n\nconst ExpenseFilter = (props) => {\n\n    // on select change handler\n    const yearChangeHandler = (event) => {\n        // lifting state up to Expenses component\n        props.onYearChange(event.target.value);\n    };\n    \n\n    return (\n        <div className=\"expenses-filter\">\n            <div className=\"expenses-filter__control\">\n                <label>Filter by year</label>\n                <select onChange={yearChangeHandler} defaultValue={props.selected}>\n                    <option value=\"2022\">2022</option>\n                    <option value=\"2021\">2021</option>\n                    <option value=\"2020\">2020</option>\n                    <option value=\"2019\">2019</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nexport default ExpenseFilter;\n","import React, { useState } from 'react';\n\nimport './Expenses.css';\nimport ExpenseItem from './Item/ExpenseItem';\nimport Card from '../Card/Card';\nimport ExpenseFilter from './Filter/ExpenseFilter';\n\nconst Expenses = (props) => {\n    const [selectedYear, setSelectedYear] = useState('2021');\n\n    // event handler for getting data from Filter\n    const yearChangeHandler = (receivedYear) => {\n        setSelectedYear(receivedYear);\n    };\n\n    console.log('Selected year:', selectedYear);\n\n    return (\n        <div>\n            <Card className=\"expenses\">\n                <ExpenseFilter\n                    selected={selectedYear}\n                    onYearChange={yearChangeHandler}\n                />\n                {props.expenses.map((expense) => {\n                    return <ExpenseItem expense={expense} />;\n                })}\n\n                {/* similar to this */}\n                {/* {[<ExpenseItem props={props.expenses[0]} />,\n                <ExpenseItem props={props.expenses[1]} />,\n                <ExpenseItem props={props.expenses[2]} />,\n                <ExpenseItem props={props.expenses[3]} />]} */}\n            </Card>\n        </div>\n    );\n};\n\nexport default Expenses;\n","import React, { useState } from 'react';\n\nimport './NewExpenseForm.css';\n\nconst NewExpenseForm = (props) => {\n    // // ----- multiple states approach -----\n    // const [inputItem, setInputItem] = useState('');\n    // const [inputPrice, setInputPrice] = useState('');\n    // const [inputDate, setInputDate] = useState('');\n\n    // // state change handlers\n    // const changeItemHandler = (evt) => {\n    //     setInputItem(evt.target.value);\n    // };\n\n    // const changePriceHandler = (evt) => {\n    //     setInputPrice(evt.target.value);\n    // };\n\n    // const changeDateHandler = (evt) => {\n    //     setInputDate(evt.target.value);\n    // };\n\n\n    // ----- one useState Hook approach ------\n    const [userInput, setUserInput] = useState({\n        inputItem: '',\n        inputPrice: '',\n        inputDate: '',\n    });\n\n    const changeItemHandler = (evt) => {\n        // setUserInput({\n        //     ...userInput,\n        //     inputItem: evt.target.value,\n        // });\n\n        // function form for previous state\n        setUserInput((prevState) => {\n            return {\n                ...prevState,\n                inputItem: evt.target.value\n            };\n        });\n    };\n\n    const changePriceHandler = (evt) => {\n        // setUserInput({\n        //     ...userInput,\n        //     inputPrice: evt.target.value,\n        // });\n        \n        // function form for previous state\n        setUserInput((prevState) => {\n            return {\n                ...prevState,\n                inputPrice: evt.target.value\n            };\n        });\n    };\n\n    const changeDateHandler = (evt) => {\n        // setUserInput({\n        //     ...userInput,\n        //     inputDate: evt.target.value,\n        // });\n\n        // function form for previous state\n        setUserInput((prevState) => {\n            return {\n                ...prevState,\n                inputDate: evt.target.value\n            };\n        });\n    };\n\n\n    // --- Form handler ---\n    const formSubmitHandler = (event) => {\n        // prevent form submission\n        event.preventDefault();\n        \n        // collecting data\n        const expenseData = {\n            item: userInput.inputItem, \n            price: parseInt(userInput.inputPrice), \n            date: new Date(userInput['inputDate'])\n        }\n\n        // send data up from Form to NewExpense\n        props.onFormSubmitToNewExpense(expenseData);\n\n        // 2-way binding, resetting input values\n        setUserInput({\n            inputItem: '',\n            inputPrice: '',\n            inputDate: '',\n        })\n    };\n\n\n    // JSX\n    return (\n        <form onSubmit={formSubmitHandler}>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label>Item</label>\n                    <input \n                        type=\"text\" \n                        onChange={changeItemHandler} \n                        value={userInput.inputItem} // resetting input\n                        // required \n                        />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Price</label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        step=\"1\"\n                        onChange={changePriceHandler}\n                        value={userInput.inputPrice} // resetting input\n                        // required\n                    />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Date</label>\n                    <input\n                        type=\"date\"\n                        min=\"2020-01-01\"\n                        max=\"2022-12-31\"\n                        onChange={changeDateHandler}\n                        value={userInput.inputDate} // resetting input\n                    />\n                </div>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button type=\"submit\">Add Expense</button>\n            </div>\n        </form>\n    );\n};\n\nexport default NewExpenseForm;\n","import React from 'react';\n\nimport './NewExpense.css';\nimport NewExpenseForm from './Form/NewExpenseForm';\n\nconst NewExpense = (props) => {\n    const saveExpenseDataHandler = (receivedExpenseData) => {\n        // const expenseData = {\n        //     ...receivedExpenseData\n        // }\n        props.onNewExpenseSubmitToApp(receivedExpenseData);\n    }\n\n    return (\n        <div className=\"new-expense\">\n            <NewExpenseForm onFormSubmitToNewExpense={saveExpenseDataHandler} />\n        </div>\n    );\n};\n\nexport default NewExpense;\n","import React from 'react';\n\nimport './Footer.css';\n\nconst Footer = () => {\n    const d = new Date();\n    const year = d.getFullYear();\n    \n    return (\n        <p>\n            <a href='https://github.com/hoangdesu/' target='_blank' rel='noreferrer'>Hoang Nguyen&#169;{year}</a>\n        </p>\n    );\n};\n\nexport default Footer\n","import React, { useState } from 'react';\n\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Footer from './components/Footer/Footer';\n\nconst INITIAL_LIST = [\n    {\n        id: 'e1',\n        item: 'Curnon watch',\n        price: 3000000,\n        date: new Date(2021, 1, 26),\n    },\n    {\n        id: 'e2',\n        item: 'Keychron K2',\n        price: 5500000,\n        date: new Date(2020, 11, 15),\n    },\n    {\n        id: 'e3',\n        item: 'Delux mouse',\n        price: 250000,\n        date: new Date(2021, 6, 10),\n    },\n    {\n        id: 'e1',\n        item: 'AirPods 2',\n        price: 5000000,\n        date: new Date(2021, 5, 30),\n    },\n];\n\nconst App = () => {\n    const [expenseList, setExpenseList] = useState(INITIAL_LIST);\n\n    // --- Event handlers ---\n    // receive data from <NewExpense />\n    const saveNewExpenseDataHandler = (receivedExpenseDataFromNewExpense) => {\n\n        const expenseData = {\n            ...receivedExpenseDataFromNewExpense,\n            id: Date.now() // using epoch time as id\n        }\n        \n        setExpenseList((prevExpenseList) => {\n            return [expenseData, ...prevExpenseList]\n        })\n    };\n    \n    console.log(expenseList);\n    \n    // modern JSX\n    return (\n        <div>\n            <h2 align=\"center\">Expense Tracker</h2>\n            <NewExpense onNewExpenseSubmitToApp={saveNewExpenseDataHandler} />\n            <Expenses expenses={expenseList} />\n            <Footer />\n        </div>\n    );\n\n\n    \n    // ----- alternative way: behind the scence, old way that return the same JSX from above\n    // return React.createElement(\n    //     'div',\n    //     {},\n    //     React.createElement('h1', {}, 'Expense Tracker using createElement'),\n    //     React.createElement(Expenses, { expenses: expenses })\n    // );\n}\n\nexport default App;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}