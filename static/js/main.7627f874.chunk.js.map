{"version":3,"sources":["components/Expenses/Date/ExpenseDate.js","components/Card/Card.js","components/Expenses/Item/ExpenseItem.js","components/Expenses/Filter/ExpenseFilter.js","components/Expenses/Expenses.js","components/NewExpense/Form/NewExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","year","date","getFullYear","month","toLocaleString","day","className","Card","classes","children","ExpenseItem","useState","title","setTitle","price","newPrice","setNewPrice","formattedPrice","style","currency","onClick","console","log","ExpenseFilter","onChange","event","onYearChange","target","value","defaultValue","selected","Expenses","selectedYear","setSelectedYear","receivedYear","expenses","NewExpenseForm","inputItem","inputPrice","inputDate","userInput","setUserInput","onSubmit","preventDefault","expenseData","item","Date","onFormSubmitToNewExpense","type","evt","prevState","min","step","max","NewExpense","receivedExpenseData","onNewExpenseSubmitToApp","App","id","align","receivedExpenseDataFromNewExpense","now","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7627f874.chunk.js","sourcesContent":["import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = ({ props }) => {\n    const year = props.date.getFullYear();\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n\n    return (\n        <div className=\"expense-date\">\n            <div className=\"expense-date__year\">{year}</div>\n            <div className=\"expense-date__month\">{month}</div>\n            <div className=\"expense-date__date\">{day}</div>\n        </div>\n    );\n}\n\nexport default ExpenseDate;\n","import React from 'react';\n\nimport './Card.css'\n\nconst Card = (props) => {\n    const classes = `card ${props.className}`;\n    return (\n        <div className={classes}>\n            {props.children}\n            {/* {console.log(props.children)} */} \n            {/* children props is an object containing all elements wrapped around Card component */}\n        </div>\n    );\n}\n\nexport default Card;","import React, { useState } from 'react';\n\nimport './ExpenseItem.css';\nimport ExpenseDate from '../Date/ExpenseDate';\nimport Card from '../../Card/Card';\n\nfunction ExpenseItem({ props }) {\n    \n    // useState Hook\n    const [title, setTitle] = useState(props.title);\n    const [newPrice, setNewPrice] = useState(props.price);\n\n    // event handlers\n    const increaseClickHandler = () => {\n        setNewPrice(props.price += 10000);\n        console.log(\"Increase\", newPrice);\n    }\n    \n    const decreaseClickHandler = () => {\n        setNewPrice(props.price -= 10000);\n        console.log(\"Decrease\", newPrice);\n    }\n    \n    const itemClickHandler = () => {\n        console.log(\"Clicked on\", props.title);\n    }\n    \n    const clickHanlder = () => {\n        setTitle('Updated!!');\n        console.log(title); // notice old value will get log, not updated value\n    }\n    \n    // convert to VND\n    const formattedPrice = newPrice.toLocaleString('vi-VI', {style: 'currency', currency: 'VND'});\n    \n    // JSX\n    return (\n        <Card className=\"expense-item\">\n            <ExpenseDate props={props} />\n            <div onClick={itemClickHandler} className=\"expense-item__description\">\n                <h2>{title}</h2>\n                <button onClick={clickHanlder}>Change title</button>\n                <button className=\"btn\" onClick={decreaseClickHandler}>-</button>\n                <div className=\"expense-item__price\">{formattedPrice}</div>\n                <button className=\"btn\" onClick={increaseClickHandler}>+</button>\n            </div>\n        </Card>\n    );\n}\n\nexport default ExpenseItem;\n","import React from 'react';\n\nimport './ExpenseFilter.css';\n\nconst ExpenseFilter = (props) => {\n\n    // on select change handler\n    const yearChangeHandler = (event) => {\n        // lifting state up to Expenses component\n        props.onYearChange(event.target.value);\n    };\n    \n\n    return (\n        <div className=\"expenses-filter\">\n            <div className=\"expenses-filter__control\">\n                <label>Filter by year</label>\n                <select onChange={yearChangeHandler} defaultValue={props.selected}>\n                    <option value=\"2022\">2022</option>\n                    <option value=\"2021\">2021</option>\n                    <option value=\"2020\">2020</option>\n                    <option value=\"2019\">2019</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nexport default ExpenseFilter;\n","import React, { useState } from 'react';\n\nimport './Expenses.css';\nimport ExpenseItem from './Item/ExpenseItem';\nimport Card from '../Card/Card';\nimport ExpenseFilter from './Filter/ExpenseFilter';\n\nconst Expenses = (props) => {\n    const [selectedYear, setSelectedYear] = useState('2021');\n\n    // event handler for getting data from Filter\n    const yearChangeHandler = (receivedYear) => {\n        setSelectedYear(receivedYear);\n    };\n    \n    console.log('Selected year:', selectedYear);\n\n    return (\n        <div>\n            <Card className=\"expenses\">\n                <ExpenseFilter selected={selectedYear} onYearChange={yearChangeHandler} />\n                <ExpenseItem props={props.expenses[0]} />\n                <ExpenseItem props={props.expenses[1]} />\n                <ExpenseItem props={props.expenses[2]} />\n                <ExpenseItem props={props.expenses[3]} />\n            </Card>\n        </div>\n    );\n};\n\nexport default Expenses;\n","import React, { useState } from 'react';\n\nimport './NewExpenseForm.css';\n\nconst NewExpenseForm = (props) => {\n    // // ----- multiple states approach -----\n    // const [inputItem, setInputItem] = useState('');\n    // const [inputPrice, setInputPrice] = useState('');\n    // const [inputDate, setInputDate] = useState('');\n\n    // // state change handlers\n    // const changeItemHandler = (evt) => {\n    //     setInputItem(evt.target.value);\n    // };\n\n    // const changePriceHandler = (evt) => {\n    //     setInputPrice(evt.target.value);\n    // };\n\n    // const changeDateHandler = (evt) => {\n    //     setInputDate(evt.target.value);\n    // };\n\n\n    // ----- one useState Hook approach ------\n    const [userInput, setUserInput] = useState({\n        inputItem: '',\n        inputPrice: '',\n        inputDate: '',\n    });\n\n    const changeItemHandler = (evt) => {\n        // setUserInput({\n        //     ...userInput,\n        //     inputItem: evt.target.value,\n        // });\n\n        // function form for previous state\n        setUserInput((prevState) => {\n            return {\n                ...prevState,\n                inputItem: evt.target.value\n            };\n        });\n    };\n\n    const changePriceHandler = (evt) => {\n        // setUserInput({\n        //     ...userInput,\n        //     inputPrice: evt.target.value,\n        // });\n        \n        // function form for previous state\n        setUserInput((prevState) => {\n            return {\n                ...prevState,\n                inputPrice: evt.target.value\n            };\n        });\n    };\n\n    const changeDateHandler = (evt) => {\n        // setUserInput({\n        //     ...userInput,\n        //     inputDate: evt.target.value,\n        // });\n\n        // function form for previous state\n        setUserInput((prevState) => {\n            return {\n                ...prevState,\n                inputDate: evt.target.value\n            };\n        });\n    };\n\n\n    // --- Form handler ---\n    const formSubmitHandler = (event) => {\n        // prevent form submission\n        event.preventDefault();\n        \n        // collecting data\n        const expenseData = {\n            item: userInput['inputItem'], // either notation works\n            price: userInput.inputPrice, // either notation works\n            date: new Date(userInput['inputDate'])\n        }\n\n        // send data up from Form to NewExpense\n        props.onFormSubmitToNewExpense(expenseData);\n\n        // 2-way binding, resetting input values\n        setUserInput({\n            inputItem: '',\n            inputPrice: '',\n            inputDate: '',\n        })\n    };\n\n\n    // JSX\n    return (\n        <form onSubmit={formSubmitHandler}>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label>Item</label>\n                    <input \n                        type=\"text\" \n                        onChange={changeItemHandler} \n                        value={userInput.inputItem} // resetting input\n                        // required \n                        />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Price</label>\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        step=\"1\"\n                        onChange={changePriceHandler}\n                        value={userInput.inputPrice} // resetting input\n                        // required\n                    />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Date</label>\n                    <input\n                        type=\"date\"\n                        min=\"2020-01-01\"\n                        max=\"2022-12-31\"\n                        onChange={changeDateHandler}\n                        value={userInput.inputDate} // resetting input\n                    />\n                </div>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button type=\"submit\">Add Expense</button>\n            </div>\n        </form>\n    );\n};\n\nexport default NewExpenseForm;\n","import React from 'react';\n\nimport './NewExpense.css';\nimport NewExpenseForm from './Form/NewExpenseForm';\n\nconst NewExpense = (props) => {\n    const saveExpenseDataHandler = (receivedExpenseData) => {\n        // const expenseData = {\n        //     ...receivedExpenseData\n        // }\n        props.onNewExpenseSubmitToApp(receivedExpenseData);\n    }\n\n    return (\n        <div className=\"new-expense\">\n            <NewExpenseForm onFormSubmitToNewExpense={saveExpenseDataHandler} />\n        </div>\n    );\n};\n\nexport default NewExpense;\n","import React from 'react';\n\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst App = () => {\n    const expenses = [\n        {\n            id: 'e1',\n            title: 'Curnon watch',\n            price: 3000000,\n            date: new Date(2021, 1, 26),\n        },\n        {\n            id: 'e2',\n            title: 'Keychron K2',\n            price: 5500000,\n            date: new Date(2020, 11, 15),\n        },\n        {\n            id: 'e3',\n            title: 'Delux mouse',\n            price: 250000,\n            date: new Date(2021, 6, 10),\n        },\n        {\n            id: 'e1',\n            title: 'AirPods 2',\n            price: 5000000,\n            date: new Date(2021, 5, 30),\n        },\n    ];\n\n    // --- Event handlers ---\n    // receive data from NewExpense handler\n    const saveNewExpenseDataHandler = (receivedExpenseDataFromNewExpense) => {\n        // console.log('Data from App: ');\n        // console.log(receivedExpenseDataFromNewExpense);\n        const expenseData = {\n            ...receivedExpenseDataFromNewExpense,\n            id: Date.now() // using epoch time as id\n        }\n        console.log(expenseData);\n    };\n\n\n\n    // modern JSX\n    return (\n        <div>\n            <h2 align=\"center\">Expense Tracker</h2>\n            <NewExpense onNewExpenseSubmitToApp={saveNewExpenseDataHandler} />\n            <Expenses expenses={expenses} />\n        </div>\n    );\n\n    // ----- alternative way: behind the scence, old way that return the same JSX from above\n    // return React.createElement(\n    //     'div',\n    //     {},\n    //     React.createElement('h1', {}, 'Expense Tracker using createElement'),\n    //     React.createElement(Expenses, { expenses: expenses })\n    // );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}