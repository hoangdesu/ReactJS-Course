{"ast":null,"code":"var _jsxFileName = \"/Users/doroke/CLOUDY/Code playground/ReactJS Course/sec10_sideEffect/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button'; // REDUCER FUNCTIONS\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.value,\n      isValid: action.value.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'PASSWORD_INPUT') {\n    return {\n      value: action.value,\n      isValid: action.value.trim().length > 6\n    };\n  }\n\n  if (action.type === 'PASSWORD_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n}; // FUNCTION COMPONENT\n\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false); // USE REDUCER\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: false\n  }); // USE EFFECTS\n\n  useEffect(() => {\n    return () => {\n      console.log('component removed');\n    };\n  }, []); // DEBOUNCING EFFECT: CHECK INPUT EVERY 500ms\n\n  useEffect(() => {\n    const debounceTimeout = setTimeout(() => {\n      console.log('checking form valid'); // setFormIsValid(\n      //     enteredEmail.includes('@') && enteredPassword.trim().length > 6\n      // );\n\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 500);\n    return () => {\n      console.log('input clean up');\n      clearTimeout(debounceTimeout);\n    };\n  }, [emailState, passwordState]); // HANDLERS\n\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    // USING DISPATCH WITH ACTION\n    dispatchEmail({\n      type: 'USER_INPUT',\n      value: event.target.value\n    }); // setFormIsValid(\n    //     emailState.isValid && event.target.value.trim().length > 6\n    // );\n    // setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: 'PASSWORD_INPUT',\n      value: event.target.value\n    }); // setFormIsValid(\n    //     emailState.isValid && event.target.value.trim().length > 6\n    // );\n    // setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({\n      type: 'PASSWORD_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"D6HzcFkDkEcvPb3HKIkwk68Vy5s=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/doroke/CLOUDY/Code playground/ReactJS Course/sec10_sideEffect/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","isValid","includes","passwordReducer","trim","length","Login","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","console","log","debounceTimeout","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;;;;AACA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAoB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAC9B,WAAO;AAAEC,MAAAA,KAAK,EAAEF,MAAM,CAACE,KAAhB;AAAuBC,MAAAA,OAAO,EAAEH,MAAM,CAACE,KAAP,CAAaE,QAAb,CAAsB,GAAtB;AAAhC,KAAP;AACH;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAC9B,WAAO;AAAEC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAf;AAAsBC,MAAAA,OAAO,EAAEJ,KAAK,CAACG,KAAN,CAAYE,QAAZ,CAAqB,GAArB;AAA/B,KAAP;AACH;;AACD,SAAO;AAAEF,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,OAAO,EAAE;AAAtB,GAAP;AACH,CARD;;AAUA,MAAME,eAAe,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACvC,MAAIA,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;AAClC,WAAO;AAAEC,MAAAA,KAAK,EAAEF,MAAM,CAACE,KAAhB;AAAuBC,MAAAA,OAAO,EAAEH,MAAM,CAACE,KAAP,CAAaI,IAAb,GAAoBC,MAApB,GAA6B;AAA7D,KAAP;AACH;;AACD,MAAIP,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AACjC,WAAO;AAAEC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAf;AAAsBC,MAAAA,OAAO,EAAEJ,KAAK,CAACG,KAAN,CAAYI,IAAZ,GAAmBC,MAAnB,GAA4B;AAA3D,KAAP;AACH;;AACD,SAAO;AAAEL,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,OAAO,EAAE;AAAtB,GAAP;AACH,CARD,C,CAUA;;;AAEA,MAAMK,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB;AACA;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCnB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACoB,eAAD,EAAkBC,kBAAlB,IAAwCrB,QAAQ,EAAtD;AACA,QAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,KAAD,CAA9C,CALqB,CAOrB;;AACA,QAAM,CAACwB,UAAD,EAAaC,aAAb,IAA8BvB,UAAU,CAACI,YAAD,EAAe;AACzDI,IAAAA,KAAK,EAAE,EADkD;AAEzDC,IAAAA,OAAO,EAAE;AAFgD,GAAf,CAA9C;AAKA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoCzB,UAAU,CAACW,eAAD,EAAkB;AAClEH,IAAAA,KAAK,EAAE,EAD2D;AAElEC,IAAAA,OAAO,EAAE;AAFyD,GAAlB,CAApD,CAbqB,CAkBrB;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACX2B,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT,CAnBqB,CA0BrB;;AACA5B,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM6B,eAAe,GAAGC,UAAU,CAAC,MAAM;AACrCH,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EADqC,CAErC;AACA;AACA;;AACAN,MAAAA,cAAc,CAACC,UAAU,CAACb,OAAX,IAAsBe,aAAa,CAACf,OAArC,CAAd;AACH,KANiC,EAM/B,GAN+B,CAAlC;AAQA,WAAO,MAAM;AACXiB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAG,MAAAA,YAAY,CAACF,eAAD,CAAZ;AACD,KAHD;AAIH,GAbQ,EAaN,CAACN,UAAD,EAAaE,aAAb,CAbM,CAAT,CA3BqB,CA2CrB;;AACA,QAAMO,kBAAkB,GAAIC,KAAD,IAAW;AAClC;AAEA;AACAT,IAAAA,aAAa,CAAC;AAAEhB,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAEwB,KAAK,CAACC,MAAN,CAAazB;AAA1C,KAAD,CAAb,CAJkC,CAMlC;AACA;AACA;AAEA;AACH,GAXD;;AAaA,QAAM0B,qBAAqB,GAAIF,KAAD,IAAW;AACrC;AAEAP,IAAAA,gBAAgB,CAAC;AAAElB,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,KAAK,EAAEwB,KAAK,CAACC,MAAN,CAAazB;AAA9C,KAAD,CAAhB,CAHqC,CAKrC;AACA;AACA;AACA;AAEH,GAVD;;AAYA,QAAM2B,oBAAoB,GAAG,MAAM;AAC/B;AACAZ,IAAAA,aAAa,CAAC;AAAEhB,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAb;AACH,GAHD;;AAKA,QAAM6B,uBAAuB,GAAG,MAAM;AAClC;AACAX,IAAAA,gBAAgB,CAAC;AAAElB,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAhB;AACH,GAHD;;AAKA,QAAM8B,aAAa,GAAIL,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACM,cAAN;AACAvB,IAAAA,KAAK,CAACwB,OAAN,CAAcjB,UAAU,CAACd,KAAzB,EAAgCgB,aAAa,CAAChB,KAA9C;AACH,GAHD;;AAKA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEN,OAAO,CAACsC,KAAzB;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEH,aAAhB;AAAA,8BACI;AACI,QAAA,SAAS,EAAG,GAAEnC,OAAO,CAACuC,OAAQ,IAC1BnB,UAAU,CAACb,OAAX,KAAuB,KAAvB,GAA+BP,OAAO,CAACwC,OAAvC,GAAiD,EACpD,EAHL;AAAA,gCAKI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,EAAE,EAAC,OAFP;AAGI,UAAA,KAAK,EAAEpB,UAAU,CAACd,KAHtB;AAII,UAAA,QAAQ,EAAEuB,kBAJd;AAKI,UAAA,MAAM,EAAEI;AALZ;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAeI;AACI,QAAA,SAAS,EAAG,GAAEjC,OAAO,CAACuC,OAAQ,IAC1BjB,aAAa,CAACf,OAAd,KAA0B,KAA1B,GAAkCP,OAAO,CAACwC,OAA1C,GAAoD,EACvD,EAHL;AAAA,gCAKI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,EAAE,EAAC,UAFP;AAGI,UAAA,KAAK,EAAElB,aAAa,CAAChB,KAHzB;AAII,UAAA,QAAQ,EAAE0B,qBAJd;AAKI,UAAA,MAAM,EAAEE;AALZ;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eA6BI;AAAK,QAAA,SAAS,EAAElC,OAAO,CAACyC,OAAxB;AAAA,+BACI,QAAC,MAAD;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,SAAS,EAAEzC,OAAO,CAAC0C,GAFvB;AAGI,UAAA,QAAQ,EAAE,CAACxB,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH,CA/HD;;GAAMN,K;;KAAAA,K;AAiIN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\n// REDUCER FUNCTIONS\nconst emailReducer = (state, action)  => {\n    if (action.type === 'USER_INPUT') {\n        return { value: action.value, isValid: action.value.includes('@') }; \n    }\n    if (action.type === 'INPUT_BLUR') {\n        return { value: state.value, isValid: state.value.includes('@') };\n    }\n    return { value: '', isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n    if (action.type === 'PASSWORD_INPUT') {\n        return { value: action.value, isValid: action.value.trim().length > 6 };\n    }\n    if (action.type === 'PASSWORD_BLUR') {\n        return { value: state.value, isValid: state.value.trim().length > 6 };\n    }\n    return { value: '', isValid: false };\n};\n\n// FUNCTION COMPONENT\n\nconst Login = (props) => {\n    // const [enteredEmail, setEnteredEmail] = useState('');\n    // const [emailIsValid, setEmailIsValid] = useState();\n    const [enteredPassword, setEnteredPassword] = useState('');\n    const [passwordIsValid, setPasswordIsValid] = useState();\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    // USE REDUCER\n    const [emailState, dispatchEmail] = useReducer(emailReducer, {\n        value: '',\n        isValid: false\n    });\n\n    const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n        value: '',\n        isValid: false\n    });\n\n    // USE EFFECTS\n    useEffect(() => {\n      return () => {\n        console.log('component removed');\n      }\n    }, []);\n\n\n    // DEBOUNCING EFFECT: CHECK INPUT EVERY 500ms\n    useEffect(() => {\n        const debounceTimeout = setTimeout(() => {\n            console.log('checking form valid');\n            // setFormIsValid(\n            //     enteredEmail.includes('@') && enteredPassword.trim().length > 6\n            // );\n            setFormIsValid(emailState.isValid && passwordState.isValid);\n        }, 500);\n\n        return () => {\n          console.log('input clean up');\n          clearTimeout(debounceTimeout);\n        };\n    }, [emailState, passwordState]);\n\n\n    // HANDLERS\n    const emailChangeHandler = (event) => {\n        // setEnteredEmail(event.target.value);\n\n        // USING DISPATCH WITH ACTION\n        dispatchEmail({ type: 'USER_INPUT', value: event.target.value });\n\n        // setFormIsValid(\n        //     emailState.isValid && event.target.value.trim().length > 6\n        // );\n\n        // setFormIsValid(emailState.isValid && passwordState.isValid);\n    };\n\n    const passwordChangeHandler = (event) => {\n        // setEnteredPassword(event.target.value);\n        \n        dispatchPassword({ type: 'PASSWORD_INPUT', value: event.target.value });\n        \n        // setFormIsValid(\n        //     emailState.isValid && event.target.value.trim().length > 6\n        // );\n        // setFormIsValid(emailState.isValid && passwordState.isValid);\n\n    };\n\n    const validateEmailHandler = () => {\n        // setEmailIsValid(emailState.isValid);\n        dispatchEmail({ type: 'INPUT_BLUR' })\n    };\n\n    const validatePasswordHandler = () => {\n        // setPasswordIsValid(enteredPassword.trim().length > 6);\n        dispatchPassword({ type: 'PASSWORD_BLUR' });\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        props.onLogin(emailState.value, passwordState.value);\n    };\n\n    return (\n        <Card className={classes.login}>\n            <form onSubmit={submitHandler}>\n                <div\n                    className={`${classes.control} ${\n                        emailState.isValid === false ? classes.invalid : ''\n                    }`}\n                >\n                    <label htmlFor=\"email\">E-Mail</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        value={emailState.value}\n                        onChange={emailChangeHandler}\n                        onBlur={validateEmailHandler}\n                    />\n                </div>\n                <div\n                    className={`${classes.control} ${\n                        passwordState.isValid === false ? classes.invalid : ''\n                    }`}\n                >\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={passwordState.value}\n                        onChange={passwordChangeHandler}\n                        onBlur={validatePasswordHandler}\n                    />\n                </div>\n                <div className={classes.actions}>\n                    <Button\n                        type=\"submit\"\n                        className={classes.btn}\n                        disabled={!formIsValid}\n                    >\n                        Login\n                    </Button>\n                </div>\n            </form>\n        </Card>\n    );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}