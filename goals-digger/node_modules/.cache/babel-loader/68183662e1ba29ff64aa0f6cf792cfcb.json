{"ast":null,"code":"var _jsxFileName = \"/Users/doroke/CLOUDYY/Code playground/ReactJS Course/goals-digger/src/components/CourseGoals/CourseInput/CourseInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../../UI/Button/Button';\nimport ClearButton from '../../UI/Button/ClearButton';\nimport './CourseInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormControl = styled.div`\n    margin: 0.5rem 0;\n\n    & label {\n        font-weight: bold;\n        display: block;\n        margin-bottom: 0.5rem;\n        color: ${props => !props.valid && 'red'};\n    }\n\n    & input {\n        display: block;\n        width: 100%;\n        border: 1px solid ${props => props.valid ? '#ccc' : 'red'};\n        font: inherit;\n        line-height: 1.5rem;\n        padding: 0 0.25rem;\n        background: ${props => !props.valid && 'salmon'};\n    }\n\n    & input:focus {\n        outline: none;\n        background: #fad0ec;\n        border-color: #8b005d;\n    }\n\n    //   &.invalid label {\n    //     color: red;\n    //   }\n\n    //   &.invalid input {\n    //     background-color: salmon;\n    //     border: red;\n    //   }\n`;\n_c = FormControl;\n\nconst CourseInput = props => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isValid, setIsValid] = useState(true);\n\n  const goalInputChangeHandler = event => {\n    if (event.target.value.trim().length > 0) setIsValid(true);\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (enteredValue.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n\n    props.onAddGoal(enteredValue);\n    setEnteredValue('');\n    setIsValid(true);\n  };\n\n  const onClearHandler = () => {\n    setEnteredValue('');\n    setIsValid(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      valid: isValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: enteredValue,\n        onChange: goalInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ClearButton, {\n        type: \"button\",\n        onClick: onClearHandler,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CourseInput, \"Ni07CKV3TMNSLbvOpvFwyLAEJlc=\");\n\n_c2 = CourseInput;\nexport default CourseInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormControl\");\n$RefreshReg$(_c2, \"CourseInput\");","map":{"version":3,"sources":["/Users/doroke/CLOUDYY/Code playground/ReactJS Course/goals-digger/src/components/CourseGoals/CourseInput/CourseInput.js"],"names":["React","useState","styled","Button","ClearButton","FormControl","div","props","valid","CourseInput","enteredValue","setEnteredValue","isValid","setIsValid","goalInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddGoal","onClearHandler","width","display","flexDirection","justifyContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAW,GAAGH,MAAM,CAACI,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAkBC,KAAD,IAAW,CAACA,KAAK,CAACC,KAAP,IAAgB,KAAM;AAClD;AACA;AACA;AACA;AACA;AACA,4BAA6BD,KAAD,IAAYA,KAAK,CAACC,KAAN,GAAc,MAAd,GAAuB,KAAO;AACtE;AACA;AACA;AACA,sBAAuBD,KAAD,IAAW,CAACA,KAAK,CAACC,KAAP,IAAgB,QAAS;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlCA;KAAMH,W;;AAoCN,MAAMI,WAAW,GAAIF,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMa,sBAAsB,GAAIC,KAAD,IAAW;AACtC,QAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,GAA0BC,MAA1B,GAAmC,CAAvC,EAA0CN,UAAU,CAAC,IAAD,CAAV;AAC1CF,IAAAA,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACH,GAHD;;AAKA,QAAMG,iBAAiB,GAAIL,KAAD,IAAW;AACjCA,IAAAA,KAAK,CAACM,cAAN;;AACA,QAAIX,YAAY,CAACQ,IAAb,GAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AAClCN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACH;;AACDN,IAAAA,KAAK,CAACe,SAAN,CAAgBZ,YAAhB;AACAC,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GATD;;AAWA,QAAMU,cAAc,GAAG,MAAM;AACzBZ,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAHD;;AAKA,sBACI;AAAM,IAAA,QAAQ,EAAEO,iBAAhB;AAAA,4BAGI,QAAC,WAAD;AAAa,MAAA,KAAK,EAAER,OAApB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAEF,YAFX;AAGI,QAAA,QAAQ,EAAEI;AAHd;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAYI;AACI,MAAA,KAAK,EAAE;AACHU,QAAAA,KAAK,EAAE,MADJ;AAEHC,QAAAA,OAAO,EAAE,MAFN;AAGHC,QAAAA,aAAa,EAAE,KAHZ;AAIHC,QAAAA,cAAc,EAAE;AAJb,OADX;AAAA,8BAQI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAEJ,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CArDD;;GAAMd,W;;MAAAA,W;AAuDN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Button from '../../UI/Button/Button';\nimport ClearButton from '../../UI/Button/ClearButton';\nimport './CourseInput.css';\n\nconst FormControl = styled.div`\n    margin: 0.5rem 0;\n\n    & label {\n        font-weight: bold;\n        display: block;\n        margin-bottom: 0.5rem;\n        color: ${(props) => !props.valid && 'red'};\n    }\n\n    & input {\n        display: block;\n        width: 100%;\n        border: 1px solid ${(props) => (props.valid ? '#ccc' : 'red')};\n        font: inherit;\n        line-height: 1.5rem;\n        padding: 0 0.25rem;\n        background: ${(props) => !props.valid && 'salmon'};\n    }\n\n    & input:focus {\n        outline: none;\n        background: #fad0ec;\n        border-color: #8b005d;\n    }\n\n    //   &.invalid label {\n    //     color: red;\n    //   }\n\n    //   &.invalid input {\n    //     background-color: salmon;\n    //     border: red;\n    //   }\n`;\n\nconst CourseInput = (props) => {\n    const [enteredValue, setEnteredValue] = useState('');\n    const [isValid, setIsValid] = useState(true);\n\n    const goalInputChangeHandler = (event) => {\n        if (event.target.value.trim().length > 0) setIsValid(true);\n        setEnteredValue(event.target.value);\n    };\n\n    const formSubmitHandler = (event) => {\n        event.preventDefault();\n        if (enteredValue.trim().length === 0) {\n            setIsValid(false);\n            return;\n        }\n        props.onAddGoal(enteredValue);\n        setEnteredValue('');\n        setIsValid(true);\n    };\n\n    const onClearHandler = () => {\n        setEnteredValue('');\n        setIsValid(true);\n    };\n\n    return (\n        <form onSubmit={formSubmitHandler}>\n            {/* <div className={`form-control ${isValid ? '' : 'invalid'}`}> */}\n            {/* <FormControl className={!isValid && 'invalid'}> {/* 1st way: adding class */}\n            <FormControl valid={isValid}>\n                <label>Course Goal</label>\n                <input\n                    type=\"text\"\n                    value={enteredValue}\n                    onChange={goalInputChangeHandler}\n                />\n            </FormControl>\n            {/* </div> */}\n            <div\n                style={{\n                    width: '100%',\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                }}\n            >\n                <Button type=\"submit\">Add Goal</Button>\n                <ClearButton type=\"button\" onClick={onClearHandler}>\n                    Clear\n                </ClearButton>\n            </div>\n        </form>\n    );\n};\n\nexport default CourseInput;\n"]},"metadata":{},"sourceType":"module"}